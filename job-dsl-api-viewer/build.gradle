import de.undercouch.gradle.tasks.download.Download

plugins {
    id 'com.moowork.gulp' version '0.11'
    id 'de.undercouch.download' version '2.0.0'
}

// see https://github.com/srs/gradle-gulp-plugin/issues/9
node {
    version = '4.4.2'
    download = true
}

apply plugin: 'org.ajoberstar.github-pages'

githubPages {
    commitMessage = "updated gh-pages for $version"
    repoUri = "git@github.com:$githubUser/job-dsl-plugin.git"
    pages {
        from '.'
        include 'index.html'
        include 'build/data/**'
        include 'build/dist/**'
    }
}

task copyData(type: Copy) {
    from tasks.getByPath(':job-dsl-core:generateApiDoc')
    into "${project.buildDir}/data"
}

task downloadUpdateCenter(type: Download) {
    src 'https://updates.jenkins-ci.org/update-center.json'
    dest 'build/data/update-center.jsonp'
    onlyIfNewer true
}

def tokenizedVersion = version.split(/\.|-/) // version can be either x.y or x.y-SNAPSHOT
int latestVersion = (tokenizedVersion[1] as int) - 1 // extract minor version and decrease by 1 to get the latest released version
(38..latestVersion).each { minorVersion ->
    def version = "1.${minorVersion}"
    task "downloadData-${version}"(type: Download) {
        src "https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/job-dsl-core/${version}/job-dsl-core-${version}-apidoc.json"
        dest "${project.buildDir}/data/dsl-${version}.json"
        onlyIfNewer true
    }
    tasks.gulp_build.dependsOn("downloadData-${version}")
}

tasks.gulp_build.inputs.file('gulpfile.js')
tasks.gulp_build.inputs.dir('src')
tasks.gulp_build.inputs.dir('node_modules')
tasks.gulp_build.outputs.dir('build/dist')
tasks.gulp_build.dependsOn('downloadUpdateCenter')
tasks.gulp_build.dependsOn('npmInstall')
tasks.gulp_build.dependsOn('copyData')
tasks.publishGhPages.dependsOn('gulp_build')

task clean(type: Delete) {
    delete project.buildDir
}
